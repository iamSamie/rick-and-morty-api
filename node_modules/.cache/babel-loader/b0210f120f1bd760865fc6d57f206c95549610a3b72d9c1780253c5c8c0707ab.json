{"ast":null,"code":"var _jsxFileName = \"/Users/semenkonevskiy/React \\u041A\\u0443\\u0440\\u0441\\u044B/project/frontend-mentor/rick-and-morty/src/components/Episode.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Context } from '../context';\nimport { EpisodeCharacters } from './EpisodeCharacters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Episode() {\n  _s();\n  const {\n    darkTheme\n  } = useContext(Context);\n  const [episode, setEpisode] = useState([]);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const arr = [];\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/episode/${id}`).then(response => response.json()).then(data => setEpisode(data));\n    // eslint-disable-next-line\n  }, []);\n  if (episode.name) {\n    episode.characters.forEach(element => {\n      arr.push(element.slice(42));\n    });\n  }\n  const goBack = () => navigate(-1);\n  const handleclick = () => setShow(!show);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !episode.name ? /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"loading\",\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-character\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: darkTheme ? 'goback black-button' : 'goback white-button',\n        onClick: goBack,\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Episode name: \", episode.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Air date: \", episode.air_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleclick,\n          children: \"click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), show ? /*#__PURE__*/_jsxDEV(EpisodeCharacters, {\n          arr: arr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(Episode, \"+HzZwXQXbgJ9ZpIgxc5+8kkRmp8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Episode;\nexport { Episode };\nvar _c;\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"names":["useContext","useEffect","useState","useNavigate","useParams","Context","EpisodeCharacters","jsxDEV","_jsxDEV","Fragment","_Fragment","Episode","_s","darkTheme","episode","setEpisode","id","navigate","arr","show","setShow","fetch","then","response","json","data","name","characters","forEach","element","push","slice","goBack","handleclick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","air_date","_c","$RefreshReg$"],"sources":["/Users/semenkonevskiy/React Курсы/project/frontend-mentor/rick-and-morty/src/components/Episode.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Context } from '../context'\nimport { EpisodeCharacters } from './EpisodeCharacters'\nfunction Episode() {\n    const { darkTheme } = useContext(Context)\n    const [episode, setEpisode] = useState([])\n    const { id } = useParams()\n    const navigate = useNavigate()\n    const arr = []\n    const [show, setShow] = useState(false)\n\n    useEffect(() => {\n        fetch(`https://rickandmortyapi.com/api/episode/${id}`)\n            .then((response) => response.json())\n            .then((data) => setEpisode(data))\n        // eslint-disable-next-line\n    }, [])\n    if (episode.name) {\n        episode.characters.forEach((element) => {\n            arr.push(element.slice(42))\n        })\n    }\n\n    const goBack = () => navigate(-1)\n    const handleclick = () => setShow(!show)\n\n    return (\n        <>\n            {!episode.name ? (\n                <h6 className=\"loading\">Loading</h6>\n            ) : (\n                <div className=\"single-character\">\n                    <button\n                        className={darkTheme ? 'goback black-button' : 'goback white-button'}\n                        onClick={goBack}>\n                        Go back\n                    </button>\n                    <p>Episode name: {episode.name}</p>\n                    <p>Air date: {episode.air_date}</p>\n                    <div className=\"cart\">\n                        <button onClick={handleclick}>click</button>\n                        {show ? <EpisodeCharacters arr={arr} /> : null}\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport { Episode }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}