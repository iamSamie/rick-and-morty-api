{"ast":null,"code":"var _jsxFileName = \"/Users/semenkonevskiy/React \\u041A\\u0443\\u0440\\u0441\\u044B/project/frontend-mentor/rick-and-morty/src/components/CharacterCard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CharacherCard() {\n  _s();\n  const {\n    characterId\n  } = useParams();\n  const [character, setCharacter] = useState(null);\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/character/${characterId}`).then(response => response.json()).then(data => setCharacter(data));\n  }, [characterId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character\",\n    children: character && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}\n_s(CharacherCard, \"Pban16tC6CJ83Mzrc3GxTosm700=\", false, function () {\n  return [useParams];\n});\n_c = CharacherCard;\nexport { CharacherCard };\nvar _c;\n$RefreshReg$(_c, \"CharacherCard\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","CharacherCard","_s","characterId","character","setCharacter","fetch","then","response","json","data","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/semenkonevskiy/React Курсы/project/frontend-mentor/rick-and-morty/src/components/CharacterCard.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nfunction CharacherCard() {\n    const { characterId } = useParams()\n    const [character, setCharacter] = useState(null)\n\n    useEffect(() => {\n        fetch(`https://rickandmortyapi.com/api/character/${characterId}`)\n            .then((response) => response.json())\n            .then((data) => setCharacter(data))\n    }, [characterId])\n\n    return <div className=\"character\">{character && <p>{character.name}</p>}</div>\n}\n\nexport { CharacherCard }\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAY,CAAC,GAAGL,SAAS,CAAC,CAAC;EACnC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZU,KAAK,CAAE,6CAA4CH,WAAY,EAAC,CAAC,CAC5DI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,YAAY,CAACK,IAAI,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAEjB,oBAAOH,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAER,SAAS,iBAAIJ,OAAA;MAAAY,QAAA,EAAIR,SAAS,CAACS;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClF;AAACf,EAAA,CAXQD,aAAa;EAAA,QACMH,SAAS;AAAA;AAAAoB,EAAA,GAD5BjB,aAAa;AAatB,SAASA,aAAa;AAAE,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}